#!/usr/bin/env node
"use strict";

var fjs = require('nuclide-format-js-base');
var updateCursor = require('nuclide-update-cursor').updateCursor;
var stdin = require('stdin');
var parseArgv = require('minimist');

var argv = parseArgv(process.argv.slice(2));

stdin(function (source) {
  let builtIns = fjs.defaultBuiltIns;
  if (argv.builtins) {
    argv.builtins.split(',').forEach((t) => builtIns.add(t.trim()));
  }

  let builtInTypes = fjs.defaultBuiltInTypes;
  if (argv.builtintypes) {
    argv.builtintypes.split(',').forEach((t) => builtInTypes.add(t.trim()));
  }

  let aliases = fjs.defaultAliases;
  if (argv.aliases) {
    const allParts = argv.aliases.split(',');
    for(let i = 0; i < allParts.length; i+=2) {
      aliases.set(allParts[i], allParts[i+1]);
    }
  }

  var result = fjs.transform(source, {
    moduleMap: fjs.createModuleMap({
      paths: [],
      pathsToRelativize: [],
      aliases,
      aliasesToRelativize: new Map(),
      builtIns,
      builtInTypes,
    }),
  });

  var cursor = updateCursor(
    source,
    {row: argv.row, column: argv.col},
    result
  );
  // we do want a linebreak at the end. Cursor position is just space
  // separated number on the 1st line
  console.log(cursor.row, cursor.column);

  // we don't want a line break at the end, so we don't use console log
  process.stdout.write(result);
});

